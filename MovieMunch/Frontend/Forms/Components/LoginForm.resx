<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="emailInput.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAAAaBJREFUWEft1zssA3EAx/HziMEjIhHxSkg8IhIjRgxGg8dADJjFhJiEGBgMEovN
        LEyEhQkTCQmLxSAek8UriEf4/prepW1a7V1bd8P9kk/Tu6T/+/X+//81Nfz4cZBqDzF+PCTwsoQ2F83A
        KjOkNy5mGFaZc9TrwIU04QRWmXdcogcZ+I/oOl24xhOsMhPYxAemkO5CuZiGrreBSVhltGYKMIsXbKMI
        6Ugx1vCIBei6YWvGXMBZ6McrTlGLVKYGGvcBIzoRTNQyZrSYL/CMXiQ7bfp8NzSeNkvgAReSP8so+djC
        N+ageXYSFZnHJ9ZRiMjELaNoID2QdFv3UA47qcAhVGQcse5wQmXM9OEGZ+jQiQTSimPcQlOdjVixVUZp
        wD4074PIRLTo/AC0W1SmEfFiu4xSimXo+bCKPIRG62wRb1hBCRKJozKKvvkYvrCLSihl2IHOa8Hb2YGO
        y5hpxj3uMIqr4HEL7CbpMop21xE0xgHq4CQpKaPkoBOR68dOUlYmFfHLxIpfJlbCyujHsN1F+ndilfEK
        o8pD/PixEcP4BcvO1scwONj3AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="passwordInput.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAeBJREFUWEftmLFLVVEcgJ+rk9AfkIFTUDSFbe3aEg6BQ9FkS25BoKJERINDQ4tD
        boro0NBQLhU6GJGbuqkgaIMiDS2R1PcdPNt799377jki4gcfj9/h/H7vx33vnnPubVwEenASV3Af/+BP
        /IxPsRfPBJv4jf8K/IsvsAuz4NX4gvELvQqPsQ+v4i18gJ8wzvmO5iVnGf2CA7znQAEDuIvO/+pASp6j
        hf1/XHegBNfwGM175kAqdtCiIyEqzzCaZ1PdDtQlFrShTlhD84dCVJM3aLHXIarONJr/NkQ18a6xmFeo
        Ex6h+R9CVJPYzP0QVcefx3zr1KZuM+ZdNtOMJM1cwVcY1xiLzXbgRzTftcZ6lTdRE1xtLZLaQ7yJpVlA
        E3/geCIncBWtu4ilWUeTbocoHXfQuhshKskmmnQjROmwXtZm7qK7sp/tyNrMHDovuoRFZGsm7jm/cB6P
        TuOH2Ipszcygc7xL5CUavwtRc7I14//EOc51R98+jZ9gK7I140E7rs5RYw/nrcjWjLhSe05x7nt0Cyki
        azMyhc71sx1n1owPd+3I3kw/fsPBEBWTvZkqnKtmPDpUbiY+L/t44h2TyvhkWunU52sNk3JZtGU0ZQy3
        8CSRvibZw1E87zQa/wH3dATkqTr6XAAAAABJRU5ErkJggg==
</value>
  </data>
</root>